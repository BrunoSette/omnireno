---
import { markdownify } from "@/lib/utils/textConverter";
import { getEntry } from "astro:content";
const entry = await getEntry("contact", "index");
const { title, info } = entry?.data;
---

<script is:inline data-cfasync="false">
  function getCookie(name) {
    const value = `; ${document.cookie}`;
    const parts = value.split(`; ${name}=`);
    if (parts.length === 2) return parts.pop().split(';').shift();
  }

  function getUTMParametersFromCookie(cookieValue) {
    const url = new URL(decodeURIComponent(cookieValue));
    const urlParams = new URLSearchParams(url.search);
    const utmParams = {};
    ['utm_source', 'utm_medium', 'utm_campaign'].forEach(param => {
      if (urlParams.has(param)) {
        utmParams[param] = urlParams.get(param);
      }
    });
    return utmParams;
  }

  console.log('Contact form script loaded');

  document.addEventListener('DOMContentLoaded', () => {
    const form = document.getElementById('contact-form');
    if (form) {
      const campaignURL = getCookie('__gtm_campaign_url');
      let utmParams = {};
      if (campaignURL) {
        utmParams = getUTMParametersFromCookie(campaignURL);
        ['utm_source', 'utm_medium', 'utm_campaign'].forEach(param => {
          const input = document.getElementById(param);
          if (input) {
            input.value = utmParams[param] || '';
          }
        });
      }

      form.addEventListener('submit', async (event) => {
        event.preventDefault(); // Prevent default form submission

        const formData = new FormData(form);

        try {
          const response = await fetch(form.action, {
            method: form.method,
            body: formData
          });

          if (response.ok) {
            window.location.href = "/thankyou";
            form.reset();
          } else {
            const errorText = await response.text();
            console.error('Failed to submit the form:', errorText);
            alert('Failed to submit the form. Please try again.');
          }
        } catch (error) {
          console.error('Error submitting the form:', error);
          alert('An error occurred while submitting the form. Please try again.');
        }
      });

  } else {
    console.error("Form not found in inline script");
  }
});


</script>

  <section class="section">
    <div class="container">
      <h1 class="text-center font-normal" set:html={markdownify(title)} />
      <div class="section row pb-0">
        <div class="col-12 md:col-6 lg:col-7">
          <form id="contact-form" class="contact-form" method="post" action="/api/sendemail">
            <div class="mb-3">
              <input class="form-input w-full rounded" id="name" name="name" type="text" placeholder="Name" required />
            </div>
            <div class="mb-3">
              <input class="form-input w-full rounded" id="email" name="email" type="email" placeholder="Your email" required />
            </div>
            <div class="mb-3">
              <input class="form-input w-full rounded" id="phone" name="phone" type="tel" placeholder="Phone Number" />
            </div>
            <div class="mb-3">
              <textarea class="form-textarea w-full rounded-md" rows="7" name="notes" id="notes" placeholder="Please provide any details or questions you have about your services, and we'll respond promptly."></textarea>
            </div>
            <input type="hidden" id="utm_source" name="utm_source" />
            <input type="hidden" id="utm_medium" name="utm_medium" />
            <input type="hidden" id="utm_campaign" name="utm_campaign" />
            <button type="submit" class="btn btn-primary">Send Now</button>
          </form>
        </div>
        <div class="content col-12 md:col-6 lg:col-5">
          <h4 set:html={markdownify(info?.title)} />
          <p class="mt-4" set:html={markdownify(info?.description)} />
          <ul class="contact-list mt-5 list-none pl-0">
            {info?.contacts?.map((contact: string) => (
              <li>
                <strong class="text-dark" set:html={markdownify(contact)} />
              </li>
            ))}
          </ul>
        </div>
      </div>
    </div>
  </section>
